CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

IF (NOT CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE STREQUAL "")
	SET (CMAKE_BUILD_TYPE "Release" CACHE STRING "" FORCE)
ENDIF()

IF (UNIX)
	SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -no-pie" CACHE STRING "" FORCE) #allows Netbeans to load the app
ENDIF(UNIX)


PROJECT(JumperBallApplication)

IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
	SET(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR} CACHE PATH "" FORCE)
ENDIF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)

SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS OFF)

IF ( CMAKE_COMPILER_IS_GNUCC )
	SET (CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -pedantic -Wall -Wextra -Woverloaded-virtual -Wfloat-equal -Wwrite-strings -Wpointer-arith -Wcast-qual -Wcast-align -Wredundant-decls -Wdouble-promotion -Winit-self -Wswitch-default -Wswitch-enum -Wlogical-op" CACHE STRING "" FORCE)
ENDIF()

IF ( MSVC )
	SET (CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} /W3" CACHE STRING "" FORCE)
ENDIF()


ADD_SUBDIRECTORY(thirdparty)
ADD_SUBDIRECTORY(coreClasses)
ADD_SUBDIRECTORY(graphicsClasses)
	



FILE(GLOB SOURCE_FILES
	${CMAKE_SOURCE_DIR}/main.cpp)

FIND_PACKAGE(OpenGL REQUIRED)



ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCE_FILES})

INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR}/include/)
#INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR}/thirdparty/GLM_install/include/)

LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/thirdparty/GLFW_install/lib/)

TARGET_LINK_LIBRARIES(${PROJECT_NAME} JumperBallGraphic)

INSTALL (DIRECTORY ${CMAKE_SOURCE_DIR}/maps DESTINATION ${CMAKE_BINARY_DIR})

