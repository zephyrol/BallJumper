CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

ADD_SUBDIRECTORY(thirdparty)

PROJECT(JumperBallGraphic)

IF (NOT CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE STREQUAL "")
	SET (CMAKE_BUILD_TYPE "Release" CACHE STRING "" FORCE)
ENDIF()

IF (UNIX)
	SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -no-pie" CACHE STRING "" FORCE) #allows Netbeans to load the app
ENDIF(UNIX)


IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
	SET(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR} CACHE PATH "" FORCE)
ENDIF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)

SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS OFF)

IF ( CMAKE_COMPILER_IS_GNUCC )
	SET (CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -pedantic -Wall -Wextra -Woverloaded-virtual -Wfloat-equal -Wwrite-strings -Wpointer-arith -Wcast-qual -Wcast-align -Wredundant-decls -Wdouble-promotion -Winit-self -Wswitch-default -Wswitch-enum -Wlogical-op" CACHE STRING "" FORCE)
ENDIF()

IF ( MSVC )
	SET (CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} /W3" CACHE STRING "" FORCE)
ENDIF()


SET (CMAKE_CXX_STANDARD 11)
SET (CMAKE_CXX_STANDARD_REQUIRED ON)
SET (CMAKE_CXX_EXTENSIONS OFF)



FILE(GLOB SOURCE_FILES
	${CMAKE_CURRENT_SOURCE_DIR}/*.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/animations/*.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/geometry/*.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/uniformBlocks/*.cpp)

FILE(GLOB HEADER_FILES
	${CMAKE_CURRENT_SOURCE_DIR}/*.h
	${CMAKE_CURRENT_SOURCE_DIR}/animations/*.h
	${CMAKE_CURRENT_SOURCE_DIR}/geometry/*.h
	${CMAKE_CURRENT_SOURCE_DIR}/uniformBlocks/*.h)

INSTALL (DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/shaders DESTINATION ${CMAKE_CURRENT_BINARY_DIR})


ADD_LIBRARY(${PROJECT_NAME} ${HEADER_FILES} ${SOURCE_FILES})

ADD_DEPENDENCIES(${PROJECT_NAME} _GLFW_)
ADD_DEPENDENCIES(${PROJECT_NAME} _GLM_)

#SET(GLFW_INCLUDE_DIR "${CMAKE_BINARY_DIR}/libs/GLFW_install/include/")
#SET(GLFW_LIBRARY_DIR "${CMAKE_BINARY_DIR}/libs/GLFW_install/lib/")

INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR}/include/)

LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/lib/)

TARGET_LINK_LIBRARIES(${PROJECT_NAME} JumperBallThirdParty JumperBallCore )
TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME} PUBLIC . )

